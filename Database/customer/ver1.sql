-- MySQL Script generated by MySQL Workbench
-- Thu May 26 08:10:45 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema new_schema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema new_schema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `new_schema` ;
USE `new_schema` ;

-- -----------------------------------------------------
-- Table `new_schema`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`customer` (
  `phone` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `driving_license` INT NOT NULL,
  PRIMARY KEY (`phone`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`vehicle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`vehicle` (
  `liscense` INT AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL COMMENT 'Economy, Compact, Mid-size, Standard, Fullsize, Premium, Luxury, SUV, Van',
  `distance` INT NOT NULL DEFAULT 0,
  `buy_year` INT NOT NULL,
  `used` INT NOT NULL DEFAULT 0,
  `stage` VARCHAR(45) NOT NULL COMMENT 'using, in office, reserved',
  `price` INT NOT NULL,
  `gas_capacity` INT NOT NULL,
  PRIMARY KEY (`liscense`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`office`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`office` (
  `office_id` INT AUTO_INCREMENT,
  `city` VARCHAR(45) NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`office_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`card`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`card` (
  `number` INT NOT NULL,
  `expire_time` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`number`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`reserve`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`reserve` (
  `customer_phone` INT NOT NULL,
  `vehicle_liscense` INT NOT NULL,
  `reserve_id` INT AUTO_INCREMENT,
  `get_office` INT NOT NULL,
  `return_office` INT NOT NULL,
  `get_time` INT NOT NULL,
  `return_time` INT NOT NULL,
  `price` INT NOT NULL,
  `state` VARCHAR(45) NOT NULL DEFAULT 'reserved' COMMENT '‘reserved’, ‘expired’, ‘canceled’, ‘rent’, ‘finished’',
  INDEX `fk_customer_has_vehicle_vehicle1_idx` (`vehicle_liscense` ASC),
  INDEX `fk_customer_has_vehicle_customer_idx` (`customer_phone` ASC),
  PRIMARY KEY (`reserve_id`),
  INDEX `get_office_idx` (`get_office` ASC, `return_office` ASC),
  CONSTRAINT `customer`
    FOREIGN KEY (`customer_phone`)
    REFERENCES `new_schema`.`customer` (`phone`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `vehicle`
    FOREIGN KEY (`vehicle_liscense`)
    REFERENCES `new_schema`.`vehicle` (`liscense`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `get_office`
    FOREIGN KEY (`get_office` )
    REFERENCES `new_schema`.`office` (`office_id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `return_office`
    FOREIGN KEY (`return_office` )
    REFERENCES `new_schema`.`office` (`office_id` )
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`office_has_vehicle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`office_has_vehicle` (
  `office_office_id` INT NOT NULL,
  `vehicle_liscense` INT NOT NULL,
  INDEX `fk_office_has_vehicle_vehicle1_idx` (`vehicle_liscense` ASC),
  INDEX `fk_office_has_vehicle_office1_idx` (`office_office_id` ASC),
  CONSTRAINT `fk_office_has_vehicle_office1`
    FOREIGN KEY (`office_office_id`)
    REFERENCES `new_schema`.`office` (`office_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_office_has_vehicle_vehicle1`
    FOREIGN KEY (`vehicle_liscense`)
    REFERENCES `new_schema`.`vehicle` (`liscense`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`rent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`rent` (
  `customer_phone` INT NOT NULL,
  `vehicle_liscense` INT NOT NULL,
  `rent_id` INT AUTO_INCREMENT,
  `get_office` INT NOT NULL,
  `get_time` INT NOT NULL,
  `paid_price` INT NOT NULL,
  `card_id` INT NOT NULL,
  `reserve_id` INT NOT NULL,
  INDEX `fk_customer_has_vehicle_vehicle2_idx` (`vehicle_liscense` ASC),
  INDEX `fk_customer_has_vehicle_customer1_idx` (`customer_phone` ASC),
  PRIMARY KEY (`rent_id`),
  INDEX `get_office_id_idx` (`get_office` ASC),
  INDEX `card_id_idx` (`card_id` ASC),
  INDEX `rent-reserve_idx` (`reserve_id` ASC),
  CONSTRAINT `phone`
    FOREIGN KEY (`customer_phone`)
    REFERENCES `new_schema`.`customer` (`phone`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `vehicle_id`
    FOREIGN KEY (`vehicle_liscense`)
    REFERENCES `new_schema`.`vehicle` (`liscense`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `get_office_id`
    FOREIGN KEY (`get_office`)
    REFERENCES `new_schema`.`office` (`office_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `card_id`
    FOREIGN KEY (`card_id`)
    REFERENCES `new_schema`.`card` (`number`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `rent-reserve`
    FOREIGN KEY (`reserve_id`)
    REFERENCES `new_schema`.`reserve` (`reserve_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `new_schema`.`back`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `new_schema`.`back` (
  `customer_phone` INT NOT NULL,
  `vehicle_liscense` INT NOT NULL,
  `return_id` INT AUTO_INCREMENT,
  `reserve_id` INT NOT NULL,
  `return_office` INT NOT NULL,
  `return_time` INT NOT NULL,
  `gas_remain` INT NOT NULL,
  `price` INT NOT NULL,
  `full_gas` INT NOT NULL,
  INDEX `fk_customer_has_vehicle_vehicle1_idx` (`vehicle_liscense` ASC),
  INDEX `fk_customer_has_vehicle_customer1_idx` (`customer_phone` ASC),
  PRIMARY KEY (`return_id`),
  INDEX `return-office_idx` (`return_office` ASC),
  INDEX `reserve-return_idx` (`reserve_id` ASC),
  CONSTRAINT `customer-return`
    FOREIGN KEY (`customer_phone`)
    REFERENCES `new_schema`.`customer` (`phone`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `return-vehicle`
    FOREIGN KEY (`vehicle_liscense`)
    REFERENCES `new_schema`.`vehicle` (`liscense`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `return-office`
    FOREIGN KEY (`return_office`)
    REFERENCES `new_schema`.`office` (`office_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `reserve-return`
    FOREIGN KEY (`reserve_id`)
    REFERENCES `new_schema`.`reserve` (`reserve_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


Insert into office(city,address) Value('Shanghai','800 Dongchuan RD');
Insert into office(city,address) Value('Guangzhou','78 Baiyun RD');
Insert into office(city,address) Value('Beijin','19 King"s RD');
Insert into office(city,address) Value('Fujian','989 Queen"s RD');

Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('economy',2015,'in office',20000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('economy',2015,'in office',20000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('economy',2015,'in office',20000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('compact',2015,'in office',50000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('compact',2015,'in office',50000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('compact',2015,'in office',50000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('mid-size',2015,'in office',50000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('mid-size',2015,'in office',50000,100);
Insert into vehicle(type,buy_year,stage,price,gas_capacity) Value('mid-size',2015,'in office',50000,100);

Insert into office_has_vehicle value(1,1);
Insert into office_has_vehicle value(1,4);
Insert into office_has_vehicle value(1,7);
Insert into office_has_vehicle value(2,2);
Insert into office_has_vehicle value(2,5);
Insert into office_has_vehicle value(2,8);
Insert into office_has_vehicle value(3,3);
Insert into office_has_vehicle value(3,6);
Insert into office_has_vehicle value(3,9);





